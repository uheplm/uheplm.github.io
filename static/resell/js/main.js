let tg = window.Telegram.WebApp; //–ø–æ–ª—É—á–∞–µ–º –æ–±—ä–µ–∫—Ç webapp —Ç–µ–ª–µ–≥—Ä–∞–º–∞ 

const type_map = {
    'buy': "#–ø–æ–∫—É–ø–∫–∞",
    'sell': "#–ø—Ä–æ–¥–∞–∂–∞",
    'service': "#—É—Å–ª—É–≥–∞",
}

const class_map = {
    'sph': '#—Å–º–∞—Ä—Ç—Ñ–æ–Ω',
    'tab': '#–ø–ª–∞–Ω—à–µ—Ç',
    'pcn': '#–ø–∫_–Ω–æ—É—Ç–±—É–∫–∏',
    'acc': '#–∞–∫—Å–µ—Å—Å—É–∞—Ä—ã',
    'com': '#–∫–æ–º–ø–ª–µ–∫—Ç—É—é—â–∏–µ',
    'par': '#–∑–∞–ø—á–∞—Å—Ç–∏',
    'per': '#–ø–µ—Ä–µ—Ñ–µ—Ä–∏—è',
    'vid': '#–≤–∏–¥–µ–æ',
    'aud': '#–∞—É–¥–∏–æ',
    'pho': '#—Ñ–æ—Ç–æ—Ç–µ—Ö–Ω–∏–∫–∞',
    'con': '#—Ä–∞—Å—Ö–æ–¥–Ω–∏–∫–∏',
    'etc': '#–ø—Ä–æ—á–µ–µ',
    'ser': '#—É—Å–ª—É–≥–∞',
}

const currency_map = {
    'rub': '‚ÇΩ',
    'uah': '‚Ç¥',
    'usd': '$',
    'kzt': '‚Ç∏',
    'byn': 'Br',
    'gel': '‚Çæ',
    'amd': '÷è'
}

const country_map = {
    'ru': {'flag': "üá∑üá∫", 'name': '–†–æ—Å—Å–∏—è', 'hashtag': '#—Ä–æ—Å—Å–∏—è'},
    'ua': {'flag': "üá∫üá¶", 'name': '–£–∫—Ä–∞–∏–Ω–∞', 'hashtag': '#—É–∫—Ä–∞–∏–Ω–∞'},
    'kz': {'flag': "üá∞üáø", 'name': '–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω', 'hashtag': '#–∫–∞–∑–∞—Ö—Å—Ç–∞–Ω'},
    'by': {'flag': "üáßüáæ", 'name': '–ë–µ–ª–∞—Ä—É—Å—å', 'hashtag': '#–±–µ–ª–∞—Ä—É—Å—å'},
    'ge': {'flag': "üá¨üá™", 'name': '–ì—Ä—É–∑–∏—è', 'hashtag': '#–≥—Ä—É–∑–∏—è'},
    'ar': {'flag': "üá¶üá≤", 'name': '–ê—Ä–º–µ–Ω–∏—è', 'hashtag': '#–∞—Ä–º–µ–Ω–∏—è'},
}

const delivery_map = {
    "ciw": '–ø–æ –≥–æ—Ä–æ–¥—É',
    'cow': '–ø–æ —Å—Ç—Ä–∞–Ω–µ',
    'wow': '–ø–æ –º–∏—Ä—É'
}

const delivery_pay_map = {
    'byClient': '–∑–∞ –≤–∞—à —Å—á–µ—Ç',
    'byMe': '–∑–∞ –º–æ–π —Å—á–µ—Ç',
}

function shake(){
    const body = document.querySelector('body')
    body.style.animation = 'kf_shake 0.4s ease-in-out 0s';
    setTimeout(() => {body.style.animation = ''}, 400)
}

function toast(text){
    const toast = document.querySelector('#toast')
    const bsToast = new bootstrap.Toast(toast)
    toast.querySelector('.toast-body').innerHTML = text;
    bsToast.show()
}

function showFallback(){
    const fallback = document.getElementById('fallback')
    fallback.style.zIndex = '10';
    fallback.style.opacity = '1'

    tg.MainButton.isVisible = false;
    tg.MainButton.color = "#143F6B";

    setTimeout(() => {tg.sendData(JSON.stringify(collectData()));tg.close()}, 3500)
    
}

function validateAndProceed(){
    const form = document.querySelector('#mainForm')
    if(!form.checkValidity()){
        tg.HapticFeedback.notificationOccurred('error')
        shake()
    }else{
        tg.HapticFeedback.notificationOccurred('success')
        showConfirmation()
    }
    form.classList.add('was-validated')
}


function showConfirmation(){
    const confirmation = document.getElementById('confirmation-fallback')
    const bubble = document.getElementById('bubble')

    document.querySelector('body').style.overflowY = 'hidden'
    
    let data = collectData()
    // { 
    //     action: 'create',
    //     name: "–ú–æ—Ç–æ—Ä–æ–ª–ª–∞ —ç–¥–∂ 20",
    //     type: 'sell',
    //     description: '–ö—É–ø–∏—Ç–µ —è –≤—Å–µ—Ö –∑–∞–µ–±–∞–ª —É–∂–µ',
    //     category: 'sph',
    //     price: {
    //         isContractPrice: true,
    //         exchange: true,
    //         price: 1,
    //         currency: 'rub'
    //     },
    //     location: {
    //         country: 'ru',
    //         city: 'KALUGA'
    //     },
    //     delivery: {
    //         hasDelivery: false,
    //         deliveryRange: 'ciw',
    //         deliveryPayment: 'byMe'
    //     },
    //     contacts: {
    //         useTelegram: true,
    //         useSiteLink: true,
    //         contactLink: '',
    //         siteLink: '',
    //     }
    // }
    
    bubble.innerHTML = bubble.innerHTML.replace('{name}', data.name)
    bubble.innerHTML = bubble.innerHTML.replace('{hashtag_type}', type_map[data.type])
    bubble.innerHTML = bubble.innerHTML.replace('{hashtag_class}', class_map[data.category])
    bubble.innerHTML = bubble.innerHTML.replace('{hashtag_country}', country_map[data.location.country].hashtag)
    bubble.innerHTML = bubble.innerHTML.replace(
        '{hashtag_optional}', 
        '' + (data.delivery.hasDelivery ? '#–¥–æ—Å—Ç–∞–≤–∫–∞' : '') + 
        '' + (data.price.exchange ? ' #–æ–±–º–µ–Ω' : '')

    )

    bubble.innerHTML = bubble.innerHTML.replace('{description}', data.description)
    bubble.innerHTML = bubble.innerHTML.replace('{flag}', country_map[data.location.country].flag)
    bubble.innerHTML = bubble.innerHTML.replace('{country}', country_map[data.location.country].name)
    bubble.innerHTML = bubble.innerHTML.replace('{city}', data.location.city)
    bubble.innerHTML = bubble.innerHTML.replace(
        '{price}',
        !data.price.isContractPrice & !data.price.exchange ? data.price.price : (data.price.isContractPrice ? '–î–æ–≥–æ–≤–æ—Ä–Ω–∞—è' : '–û–±–º–µ–Ω')
    )
    bubble.innerHTML = bubble.innerHTML.replace(
        '{currency}', 
        !data.price.isContractPrice & !data.price.exchange ? currency_map[data.price.currency] : ''
    )
    bubble.innerHTML = bubble.innerHTML.replace(
        '{shipping}', 
        data.delivery.hasDelivery ? (`–î–æ—Å—Ç–∞–≤–∫–∞ ${delivery_map[data.delivery.deliveryRange]} ${delivery_pay_map[data.delivery.deliveryPayment]}`)
        : '–°–∞–º–æ–≤—ã–≤–æ–∑'
    )
    bubble.innerHTML = bubble.innerHTML.replace(
        '{ad_link}', 
        data.contacts.useSiteLink ? `<br><a href="${data.contacts.siteLink}">–û–±—ä—è–≤–ª–µ–Ω–∏–µ –Ω–∞ —Å–∞–π—Ç–µ</a>` : ''
    )
    bubble.innerHTML = bubble.innerHTML.replace(
        '{seller_name}', 
        tg.initDataUnsafe.user.first_name + ' ' + tg.initDataUnsafe.user.last_name
    )
    bubble.innerHTML = bubble.innerHTML.replace('{reports}', 0)
    bubble.innerHTML = bubble.innerHTML.replace('{rating}', 0)
    bubble.innerHTML = bubble.innerHTML.replace('{id}', tg.initDataUnsafe.user.id)
    bubble.innerHTML = bubble.innerHTML.replace('{profile}', 'https://t.me/theresell_bot/?start=p_' + tg.initDataUnsafe.user.id)
    

    tg.MainButton.offClick(validateAndProceed)
    tg.MainButton.text = '–û—Ç–ø—Ä–∞–≤–∏—Ç—å'
    tg.MainButton.onClick(showFallback)

    confirmation.style.zIndex = '5';
    confirmation.style.opacity = '1'
}

function hideConfirmation(){
    const confirmation = document.getElementById('confirmation-fallback')
    document.querySelector('body').style.overflowY = 'scroll'
    document.getElementById('bubble').innerHTML = `
            <b>{name}</b>
            <br><br>
            {hashtag_type} {hashtag_class} {hashtag_country} {hashtag_optional}
            <br><br>
            <i>{description}</i>
            <br><br>
            {flag} {country}, {city}<br>
            <b>üí≥ {price}{currency}</b><br>
            <b>üì¶ {shipping}</b>{ad_link}<br>
            <br>
            üë§ <a>{seller_name}</a> | ‚≠êÔ∏è {rating} | ‚ö†Ô∏è {reports} | <a>–ø—Ä–æ—Ñ–∏–ª—å</a>
    `
    confirmation.style.opacity = '0'
    confirmation.style.zIndex = '-1000';
    tg.MainButton.offClick(showFallback)
    tg.MainButton.text = '–î–∞–ª–µ–µ'
    tg.MainButton.onClick(validateAndProceed)
}

const valueOf = (id) => document.querySelector(id) ? document.querySelector(id).value : undefined
const isChecked = (id) => document.querySelector(id) ? document.querySelector(id).checked : undefined


function collectData(){
    return {
        action: 'create',
        name: valueOf('#name'),
        type: document.querySelector('#typeBuy').checked ? 'buy' : document.querySelector('#typeService').checked ? 'service' : 'sell',
        description: valueOf('#description'),
        category: valueOf('#category'),
        price: {
            isContractPrice: isChecked('#contractPrice '),
            exchange: isChecked('#exchange'),
            price: valueOf('#price'),
            currency: valueOf('#currency')
        },
        location: {
            country: valueOf('#country'),
            city: valueOf('#city')
        },
        delivery: {
            hasDelivery: isChecked("#delivery"),
            deliveryRange: valueOf("#deliveryRange"),
            deliveryPayment: valueOf("#deliveryPayment")
        },
        contacts: {
            useTelegram: isChecked("#useTelegram"),
            useSiteLink: isChecked("#useSiteLink"),
            contactLink: valueOf("#contactLink"),
            siteLink: valueOf("#siteLink"),
        }
    }
}

(function(){
    document.querySelectorAll('button, input, select, textarea')
        .forEach(e => e.addEventListener('click', () => {tg.HapticFeedback.impactOccurred('medium')}))
    document.querySelectorAll('select').forEach(e => e.addEventListener('change', tg.HapticFeedback.selectionChanged()))
    document.querySelector('body').setAttribute("data-bs-theme", tg.colorScheme)
    tg.MainButton.isVisible = true;
    tg.MainButton.text = "–î–∞–ª–µ–µ"; //–∏–∑–º–µ–Ω—è–µ–º —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏
    tg.onEvent('viewportChanged', (e) => {
        if(tg.isExpanded){
            document.querySelector('body').style.marginTop = '1.2rem';
            // document.querySelector("#logo").classList.add('logo-fixed')
        }else{
            document.querySelector('body').style.marginTop = '0';
            // document.querySelector("#logo").classList.remove('logo-fixed')
        }
    })

    document.querySelector('#contractPrice').addEventListener('change', (event) => {
        document.querySelectorAll('#price, #currency').forEach(e => e.disabled = event.target.checked)
    })

    document.querySelectorAll('#typeService, #typeBuy, #typeSell').forEach(el => el.addEventListener('change', (event) => {
            const icon = document.querySelector('#categoryIcon')
            document.querySelector('#category').disabled = document.querySelector('#typeService').checked
            if(document.querySelector('#typeService').checked){
                document.querySelector('#category').value = 'ser'
                icon.innerHTML = '<i class="bi bi-person-fill-gear"></i>'
            }else{
                document.querySelector('#category').value = ''
                icon.innerHTML = '<i class="bi bi-hash"></i>'
            }
        })
    )

    document.querySelector('#exchange').addEventListener('change', (event) => {
        if(event.target.checked){
            document.querySelector('#contractPrice').checked = false
        } 
        document.querySelectorAll('#price, #currency, #contractPrice').forEach(e => e.disabled = event.target.checked)
    })

    document.querySelector('#useSiteLink').addEventListener('change', (event) => {
        document.querySelector('#siteLink').disabled = !event.target.checked
    })

    document.querySelector('#delivery').addEventListener('change', (event) => {
        document.querySelector('#deliveryRange').disabled = !event.target.checked
        document.querySelector('#deliveryPayment').disabled = !event.target.checked
    })

    document.querySelector('#useTelegram').addEventListener('change', (event) => {
        document.querySelector('#contactLink').disabled = event.target.checked
    })

    document.querySelector('#rulesAll').addEventListener('change', (event) => {
        document.querySelector('#rules1').checked = event.target.checked
        document.querySelector('#rules2').checked = event.target.checked
        document.querySelector('#rules3').checked = event.target.checked
    })

    document.querySelector('#country').addEventListener('change', (event) => {
        const icon = document.querySelector('#countryIcon')
        console.log(event.target.value)
        switch(event.target.value){
            case 'ru':
                icon.innerHTML = '<i class="em em-ru" aria-role="presentation" aria-label="Russia Flag"></i>'
                break;
            case 'ua':
                icon.innerHTML = '<i class="em em-flag-ua" aria-role="presentation" aria-label="Ukraine Flag"></i>'
                break;
            case 'kz':
                icon.innerHTML = '<i class="em em-flag-kz" aria-role="presentation" aria-label="Kazakhstan Flag"></i>'
                break;
            case 'by':
                icon.innerHTML = '<i class="em em-flag-by" aria-role="presentation" aria-label="Belarus Flag"></i>'
                break;
            case 'ge':
                icon.innerHTML = '<i class="em em-flag-ge" aria-role="presentation" aria-label="Georgia Flag"></i>'
                break;
            case 'ar':
                icon.innerHTML = '<i class="em em-flag-am" aria-role="presentation" aria-label="Armenia Flag"></i>'
                break;
        }
    }) 

    document.querySelector('#category').addEventListener('change', (event) => {
        const icon = document.querySelector('#categoryIcon')
        console.log(event.target.value)
        switch(event.target.value){
            case 'sph':
                icon.innerHTML = '<i class="bi bi-phone"></i>'
                break;
            case 'tab':
                icon.innerHTML = '<i class="bi bi-tablet"></i>'
                break;
            case 'pcn':
                icon.innerHTML = '<i class="bi bi-pc-display"></i>'
                break;
            case 'acc':
                icon.innerHTML = '<i class="bi bi-sd-card"></i>'
                break;
            case 'com':
                icon.innerHTML = '<i class="bi bi-pci-card"></i>'
                break;
            case 'par':
                icon.innerHTML = '<i class="bi bi-gear-wide"></i>'
                break;
            case 'per':
                icon.innerHTML = '<i class="bi bi-keyboard"></i>'
                break;
            case 'aud':
                icon.innerHTML = '<i class="bi bi-earbuds"></i>'
                break;
            case 'vid':
                icon.innerHTML = '<i class="bi bi-camera-reels"></i>'
                break;
            case 'con':
                icon.innerHTML = '<i class="bi bi-droplet"></i>'
                break;
            case 'pho':
                icon.innerHTML = '<i class="bi bi-camera2"></i>'
                break;
            case 'etc':
                icon.innerHTML = '<i class="bi bi-three-dots"></i>'
                break;
            case 'ser':
                icon.innerHTML = '<i class="bi bi-person-fill-gear"></i>'
                break;
            default:
                icon.innerHTML = '<i class="bi bi-hash"></i>'
                break;

            
        }
    }) 
    

    document.querySelectorAll('#rules1, #rules2, #rules3').forEach(el => el.addEventListener('change', e => {
            if (document.querySelector('#rules1').checked && document.querySelector('#rules2').checked && document.querySelector('#rules3').checked){
                document.querySelector('#rulesAll').checked = true
            }else{
                document.querySelector('#rulesAll').checked = false
            }
        })
    )

    document.querySelectorAll('a').forEach(el => {
        el.addEventListener('click', e => {
            e.preventDefault()
            tg.openLink(el.href, {try_instant_view: true})
        })
    })
    
    
    tg.MainButton.onClick(validateAndProceed)

    tg.ready()
})()